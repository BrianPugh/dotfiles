#!/bin/sh

system_type=$(uname -s)
system_arch=$(uname -m)

SUDO=$(which sudo)

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

  # Install packages
  brew install curl neovim tmux ripgrep fd node pyenv git-delta

  # Setup Python
  python_version=3.9.9  # We'll upgrade to 3.10 as it gets more popular
  pyenv install $python_version
  pyenv global $python_version

else
  # Ubuntu
  $SUDO apt update

  # Easy to install things
  $SUDO apt install -y \
    autoconf \
    automake \
    cmake \
    curl \
    doxygen \
    fd-find \
    file \
    g++ \
    gettext \
    git \
    libtool \
    libtool-bin \
    ninja-build \
    pkg-config \
    python3-dev \
    python3-pip \
    ripgrep \
    snapd \
    software-properties-common \
    tmux \
    unzip \
    wget \
    zsh \

  python3 -m pip install --upgrade pip
  python3 -m pip install pipx
  python3 -m pipx ensurepath
  pipx install magic-wormhole

  # Install Python CLI tools
  pipx install pre-commit

  # Change default shell to zsh
  chsh -s $(which zsh)

  # Install bat (improved cat replacement)
  BAT_VERSION=0.20.0
  if [ "$system_arch" = "aarch64" ]; then
    BAT_DEB_FN=bat_${BAT_VERSION}_arm64.deb
  elif [ "$system_arch" = "x86_64" ]; then
    BAT_DEB_FN=bat_${BAT_VERSION}_amd64.deb
  elif [ "$system_arch" = "armv7l" ]; then
    # 32-bit Raspberry pi
    BAT_DEB_FN=bat_${BAT_VERSION}_armhf.deb
  else
    echo "Unknown system architecture $system_arch"
    exit 1
  fi

  wget https://github.com/sharkdp/bat/releases/download/v$BAT_VERSION/$BAT_DEB_FN
  $SUDO apt install ./$BAT_DEB_FN
  rm $BAT_DEB_FN

  # Install git-delta
  # TODO: https://dandavison.github.io/delta/installation.html

  # Install node
  if [ -z "$SUDO" ]; then
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
  else
    curl -fsSL https://deb.nodesource.com/setup_lts.x | $SUDO -E bash -
  fi
  $SUDO apt install -y nodejs

  # Install neovim
  git clone https://github.com/neovim/neovim
  cd neovim
  make CMAKE_BUILD_TYPE=RelWithDebInfo
  $SUDO make install

  # Install neovim plugins
  nvim +PackerCompile +PackerSync
fi

# Generate new ssh keys
ssh-keygen -t ed25519

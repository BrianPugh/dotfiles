#!/bin/sh

system_type=$(uname -s)
system_arch=$(uname -m)

SUDO=$(which sudo)

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

  # Install packages
  brew install curl neovim tmux ripgrep fd node pyenv

  # Setup Python
  python_version=3.9.9  # We'll upgrade to 3.10 as it gets more popular
  pyenv install $python_version
  pyenv global $python_version

else
  # Ubuntu
  $SUDO apt update

  # Easy to install things
  $SUDO apt install -y tmux ripgrep fd-find curl zsh wget

  # Change default shell to zsh
  chsh -s $(which zsh)

  # Install bat (improved cat replacement)
  if [ "$system_arch" = "aarch64" ]; then
    BAT_DEB_FN=bat_0.20.0_arm64.deb
  elif [ "$system_arch" = "x86_64" ]; then
    BAT_DEB_FN=bat_0.20.0_amd64.deb
  else
    echo "Unknown system architecture $system_arch"
    exit 1
  fi

  wget https://github.com/sharkdp/bat/releases/download/v0.20.0/$BAT_DEB_FN
  $SUDO apt install ./$BAT_DEB_FN
  rm $BAT_DEB_FN

  # Install node
  curl -fsSL https://deb.nodesource.com/setup_lts.x | $SUDO -E bash -

  # Install neovim
  curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
  chmod u+x nvim.appimage
  $SUDO mv nvim.appimage /user/bin/nvim

  # Install neovim plugins
  nvim +PackerCompile +PackerSync
fi

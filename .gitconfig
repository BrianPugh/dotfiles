# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
name = Brian Pugh
email = bnp117@gmail.com
[init]
    defaultBranch = main
[filter "lfs"]
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
[alias]
    # Deletes all merged branches
    cleanup-merged = !"git branch --merged | grep -vE 'main|master|dev|develop|development|prod|production\\*' | xargs -n 1 git branch -D && git branch"
    # Squashes repo into a single commit.
    squash-all = "!f(){ git reset $(git commit-tree HEAD^{tree} -m \"${1:-Public release.}\");};f"
    # Delete a remote tag
    del-tag = !sh -c 'git tag -d $1 && git push origin :refs/tags/$1' -
    # Resolve poetry.lock merge conflicts
    rebase-poetry = !"git checkout --theirs poetry.lock && poetry lock --no-update && poetry install && git add poetry.lock"
    rename = "!moveit() { git push origin --delete `git branch --show-current` || true; git branch -m $1; git push --set-upstream origin $1; }; moveit"
    a = "add"
    b = "branch --sort=-committerdate"
    c = "commit"
    co = "checkout"
    d = "diff"
    s = "status"
    sl = stash list --pretty=format:\"%C(red)%h%C(reset) - %C(dim yellow)(%C(bold magenta)%gd%C(dim yellow))%C(reset) %<(70,trunc)%s %C(green)(%cr) %C(bold blue)<%an>%C(reset)\"
	cleanup-stale = "!f() { \\\n    if [[ \"$OSTYPE\" == \"darwin\"* ]]; then \\\n        EXPIRY_DATE=$(date -v-8w +\"%Y-%m-%d\"); \\\n    else \\\n        EXPIRY_DATE=$(date +\"%Y-%m-%d\" -d \"-8 week\"); \\\n    fi; \\\n    DRY_RUN=${1:-true}; \\\n    echo \"Checking for stale local branches (older than $EXPIRY_DATE)...\"; \\\n    git for-each-ref --format=\"%(committerdate:short) %(refname:short)\" \\\n        --sort -committerdate refs/heads | \\\n        while read date branch; do \\\n            if [[ $branch =~ ^(main|master|dev|develop|development|prod|production|HEAD)$ ]]; then \\\n                printf \"%9s | %s | %50s\\n\" \"PROTECTED\" \"$date\" \"$branch\"; \\\n            elif [[ \"$date\" < \"$EXPIRY_DATE\" ]]; then \\\n                printf \"%9s | %s | %50s\\n\" \"DELETE\" \"$date\" \"$branch\"; \\\n                if [[ \"$DRY_RUN\" == \"false\" ]]; then \\\n                    git branch -D \"$branch\"; \\\n                fi; \\\n            fi; \\\n        done; \\\n    if [[ \"$DRY_RUN\" == \"true\" ]]; then \\\n        echo \"\\nThis was a dry run. To actually delete branches, run:\"; \\\n        echo \"git cleanup-stale false\"; \\\n    fi; \\\n}; f"
[push]
    autoSetupRemote = true
[core]
    pager = delta --line-numbers --dark
	trustctime = false
[delta]
    side-by-side = true
[pull]
	ff = only
